[package]
name = "imager-api"
version = "0.1.0"
edition = "2021"

[profile.dev]
# Potential to opt-in on higher optimization for our code. This may increase incremental compilation times, but will reduce binaty size.
opt-level = 0
[profile.dev.package."*"]
# High optimization for our dependencies. This should increase performance drastically whithout hitting our incremental compilation times.
# This will lead to obscure error messages from third party libraries. Comment this out when experiencing a tricky bug.
opt-level = 3

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
axum = { version = "0.7.5", features = ["query", "macros"], optional = true }
axum-server = { version = "0.6.0", features = ["tls-rustls"], optional = true }

leptos = { version = "0.6.12", features = [] }
leptos_axum = { version = "0.6.12", optional = true }
leptos_meta = { version = "0.6.12", features = [] }
leptos_router = { version = "0.6.12", features = [] }
leptonic = { version = "0.5.0", git = "https://github.com/lpotthast/leptonic", branch = "main", features = [] }

tokio = { version = "1.38.0", features = ["full"], optional = true }
tokio-util = { version = "0.7.11", features = ["io"], optional = true }

console_error_panic_hook = "0.1.7"
tracing = "0.1.40"
tracing-subscriber = "0.3.18"
tracing-wasm = "0.2.1"

tower = { version = "0.4.13", features = ["util", "timeout"], optional=true }
tower-http = { version = "0.5.2", features = ["full"], optional=true }

sqlx = { version = "0.7.4", features = ["runtime-tokio", "mysql", "chrono", "tls-rustls", "macros"], optional = true  }
cloud-storage = { version = "0.11.1", optional = true }
indradb-proto = { version = "4.0.0", optional = true }
indradb = { version = "4.0.0", optional = true }
indradb-lib = { version = "4.0.0", features = ["rocksdb-datastore"], optional = true  }

cfg-if = "1"
http = "1.1.0"
serde = "1.0.203"
serde_json = "1.0.117"
tonic = { version = "0.10.2", optional = true }
futures = "0.3.30"
dotenv = { version = "0.15.0", optional = true }
time = { version = "0.3.36", features = ["wasm-bindgen"] }
chrono = "0.4.38"
uuid = { version = "1.8.0", features = ["v7", "serde"] }
rayon = { version = "1.10.0", optional = true }
libc = { version = "0.2.155", optional = true }

types = { path = "../types" }
image = { version = "0.24.9", optional = true }
dateparser = "0.2.1"
thiserror = "1.0.61"

[features]
hydrate = [
    "leptos/hydrate",
    "leptos_meta/hydrate",
    "leptos_router/hydrate",
    "leptonic/hydrate"
]
ssr = [
    "dep:axum",
    "dep:axum-server",
    "dep:tokio",
    "dep:tower",
    "dep:tower-http",
    "dep:leptos_axum",
    "dep:sqlx",
    "dep:cloud-storage",
    "dep:indradb-proto",
    "dep:indradb",
    "dep:indradb-lib",
    "dep:image",
    "dep:tonic",
    "dep:dotenv",
    "dep:rayon",
    "dep:libc",
    "types/backend",
    "leptos/ssr",
    "leptos_meta/ssr",
    "leptos_router/ssr",
    "leptonic/ssr",
]

# Defines a size-optimized profile for the WASM bundle in release mode
[profile.wasm-release]
inherits = "release"
opt-level = 'z'
lto = true
codegen-units = 1
panic = "abort"

[package.metadata.leptonic]
# REQUIRED: Leptonic's build-script will copy the Leptonic themes to this directory.
style-dir = "style"

# REQUIRED: Leptonic's build-script will copy static JS dependencies to this directory.
js-dir = "public/js"

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "leptonic-template-ssr"

# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"

# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"

# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "style/main.scss"

# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "public"

# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"

# The port to use for automatic reload monitoring
reload-port = 3001

# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"

#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

# Set by cargo-leptos watch when building with that tool. Controls whether autoreload JS will be included in the head
watch = false

# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

# The profile to use for the lib target when compiling for release
#
# Optional. Defaults to "release".
lib-profile-release = "wasm-release"
